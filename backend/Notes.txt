
Backend Notes


_______________________Step 1______________________________________

enter in that folder and enter cmd

> npm init

package name - express_nova (any name )
version - nan
...
...
yes

// package file - file will be created 
// now need to install express , nodemon

> npm install express --save
> npm i nodemon

_______________________Step 2 _______________________________________________________

// Make app.js file inside backend

write in srcipts in side pacakge.json
(also create a file app.js)
"start": "nodemon app.js",

npm start
//start the serrver (nodemon)

_______________________Step 3 _______________________________________________________
 
 // Run the server on a Port

const express = require('express');
const app = express();            

app.get('/',(req ,resp) => {
    resp.send('my server is started'); 
    //console.log('sever started');   
})


console.log("sujay server is running...");
app.listen(5000);


_______________________Step 4 _______________________________________________________


syntax get ->

app.get('/', (req ,resp) => {
    const productlist = [
        {
            name: "product 1",
            id: 1
        },
        {
            name: "product 2",
            id: 2
        }
    ]
    resp.send(productlist);
    console.log('product send...');
})



syntax post -> 

app.post('/', (req, resp) => {
    try{
        console.log('post api data -', req.body);
        resp.send('api sucessfull...');
    }
    catch(err){
        resp.send("faild...");
    }
})


________________________step 5_______________________________

add cors 

npm i cors

in app.js

const cors = require('cors');


________________________step 6 _______________________________________________________

bodyParsel use to get console on backend server console (can read)


________________________step 7_______________________________
data base 

create shecma

//scehma 
const userSchema = new mongoose.Schema({
    Work: String,
    deadline: String
})

const todomern = mongoose.model('todomern', userSchema)
//    anything                 table name       same as upper schema (to coonnect)


app.post('/', (req, resp) => {
    try{

        let user = new todomern();
                         same as upper one
        todomern.work = req.body.work;
        todomern.deadline = req.body.deadline;

        console.log('post api data -', req.body);
        
    }
    catch(err){
        resp.send("faild...");
    }
})


________________________step 8_______________________________

show all data on from end 


//show all data from data base to front end
app.get('/data',async (req ,resp) => {
   const docs = await todomern.find({});
   resp.json(docs);   
})